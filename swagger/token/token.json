{
  "openapi": "3.0.0",
  "paths": {
    "/v1.2/multi-chain": {
      "get": {
        "operationId": "TokenListMultiChainController-tokens-26dc2598-a86a-4eb9-8c96-bba4788eddff",
        "summary": "1inch whitelisted multi-chain tokens",
        "description": "Get 1inch whitelisted multi-chain tokens info",
        "parameters": [
          {
            "name": "provider",
            "required": false,
            "in": "query",
            "description": "Provider code. Default value is 1inch",
            "example": "1inch",
            "schema": { "type": "string" }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Country code",
            "example": "US",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Token info map",
            "content": { "application/json": { "schema": { "type": "object" } } }
          }
        },
        "tags": ["tokens"]
      }
    },
    "/v1.2/multi-chain/token-list": {
      "get": {
        "operationId": "TokenListMultiChainController-tokensList-397c757b-fa4a-4471-ab28-c30e60489d8a",
        "summary": "1inch whitelisted multi-chain tokens in list format",
        "description": "Get 1inch whitelisted multi-chain tokens in list",
        "parameters": [
          {
            "name": "provider",
            "required": false,
            "in": "query",
            "description": "Provider code. Default value is \"1inch\"",
            "example": "1inch",
            "schema": { "type": "string" }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Country code",
            "example": "US",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Token list",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokenListResponseDto" } } }
          }
        },
        "tags": ["tokens"]
      }
    },
    "/v1.2/search": {
      "get": {
        "operationId": "SearchCrossChainController-searchAllChains-4b192682-e999-4a61-9f81-73d63cdd3553",
        "summary": "Search multi-chain tokens by name or symbol",
        "description": "Search multi-chain tokens by name or symbol",
        "parameters": [
          {
            "name": "query",
            "required": false,
            "in": "query",
            "description": "Text to search for in token address, token symbol, or description",
            "example": "1inch",
            "schema": { "type": "string" }
          },
          {
            "name": "ignore_listed",
            "required": false,
            "in": "query",
            "description": "Whether to ignore listed tokens",
            "example": false,
            "schema": { "type": "boolean" }
          },
          { "name": "only_positive_rating", "required": true, "in": "query", "schema": { "type": "boolean" } },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Maximum number of tokens to return",
            "example": 10,
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/TokenDto" } }
              }
            }
          },
          "400": { "description": "Invalid chain ID" }
        },
        "tags": ["tokens"]
      }
    },
    "/v1.2/{chainId}": {
      "get": {
        "operationId": "TokenListController-tokens-13dfa177-3a8e-4b31-a566-177e52052407",
        "summary": "1inch whitelisted tokens",
        "description": "Get 1inch whitelisted tokens info",
        "parameters": [
          { "name": "chainId", "required": true, "in": "path", "schema": { "type": "number" } },
          {
            "name": "provider",
            "required": false,
            "in": "query",
            "description": "Provider code. Default value is 1inch",
            "example": "1inch",
            "schema": { "type": "string" }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Country code",
            "example": "US",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Token info map",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "0x111111111117dc0aa78b770fa6a738034120c302": { "$ref": "#/components/schemas/ProviderTokenDto" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid chain ID",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" } } }
          }
        },
        "tags": ["tokens"]
      }
    },
    "/v1.2/{chainId}/token-list": {
      "get": {
        "operationId": "TokenListController-tokensList-dc8e8de4-5f8c-4e54-887c-939fe6bfb7e2",
        "summary": "1inch whitelisted tokens in list format",
        "description": "Get 1inch whitelisted tokens in list",
        "parameters": [
          { "name": "chainId", "required": true, "in": "path", "schema": { "type": "number" } },
          {
            "name": "provider",
            "required": false,
            "in": "query",
            "description": "Provider code. Default value is \"1inch\"",
            "example": "1inch",
            "schema": { "type": "string" }
          },
          {
            "name": "country",
            "required": false,
            "in": "query",
            "description": "Country code",
            "example": "US",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Token list",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TokenListResponseDto" } } }
          },
          "400": {
            "description": "Invalid chain ID",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" } } }
          }
        },
        "tags": ["tokens"]
      }
    },
    "/v1.2/{chainId}/search": {
      "get": {
        "operationId": "SearchController-searchSingleChain-7808e5a9-27a3-478a-be38-7024f60ce7fc",
        "summary": "Search tokens by name or symbol",
        "description": "Search tokens by name or symbol",
        "parameters": [
          { "name": "chainId", "required": true, "in": "path", "schema": { "type": "number" } },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "description": "Text to search for in token address, token symbol, or description",
            "example": "1inch",
            "schema": { "type": "string" }
          },
          {
            "name": "ignore_listed",
            "required": false,
            "in": "query",
            "description": "Whether to ignore listed tokens",
            "example": false,
            "schema": { "type": "boolean" }
          },
          { "name": "only_positive_rating", "required": true, "in": "query", "schema": { "type": "boolean" } },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Maximum number of tokens to return",
            "example": 10,
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/TokenDto" } }
              }
            }
          },
          "400": { "description": "Invalid chain ID" }
        },
        "tags": ["tokens"]
      }
    },
    "/v1.2/{chainId}/custom": {
      "get": {
        "operationId": "CustomTokensController-getTokensInfo-965db324-96c9-44ed-9ba9-409685d4c13a",
        "summary": "Get many tokens",
        "description": "Get tokens info",
        "parameters": [
          { "name": "chainId", "required": true, "in": "path", "schema": { "type": "number" } },
          {
            "name": "addresses",
            "required": true,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens info map",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "0x111111111117dc0aa78b770fa6a738034120c302": { "$ref": "#/components/schemas/TokenInfoDto" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid chain ID or address",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" } } }
          }
        },
        "tags": ["tokens"]
      }
    },
    "/v1.2/{chainId}/custom/{address}": {
      "get": {
        "operationId": "CustomTokensController-getTokenInfo-9d2f4bfb-396e-45ff-8354-de79d4886d6d",
        "summary": "Get single token",
        "description": "Get token info",
        "parameters": [
          { "name": "chainId", "required": true, "in": "path", "schema": { "type": "number" } },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "example": "0x111111111117dc0aa78b770fa6a738034120c302",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Token info",
            "content": {
              "application/json": { "schema": { "type": "object", "$ref": "#/components/schemas/TokenDto" } }
            }
          },
          "400": {
            "description": "Invalid chain ID or address",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" } } }
          }
        },
        "tags": ["tokens"]
      }
    }
  },
  "info": { "title": "1inch Tokens API", "description": "", "version": "4.10.6", "contact": {} },
  "tags": [{ "name": "tokens", "description": "" }],
  "servers": [],
  "components": {
    "schemas": {
      "ProviderTokenDto": {
        "type": "object",
        "properties": {
          "chainId": { "type": "number" },
          "symbol": { "type": "string" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "decimals": { "type": "number" },
          "logoURI": { "type": "string" },
          "providers": { "type": "array", "items": { "type": "string" } },
          "eip2612": { "type": "boolean" },
          "isFoT": { "type": "boolean" },
          "displayedSymbol": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["chainId", "symbol", "name", "address", "decimals", "providers", "tags"]
      },
      "TagDto": {
        "type": "object",
        "properties": { "provider": { "type": "string" }, "value": { "type": "string" } },
        "required": ["provider", "value"]
      },
      "TokenInfoDto": {
        "type": "object",
        "properties": {
          "address": { "type": "string" },
          "chainId": { "type": "number" },
          "decimals": { "type": "number" },
          "extensions": { "type": "object" },
          "logoURI": { "type": "string" },
          "name": { "type": "string" },
          "symbol": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["address", "chainId", "decimals", "logoURI", "name", "symbol", "tags"]
      },
      "VersionDto": {
        "type": "object",
        "properties": { "major": { "type": "number" }, "minor": { "type": "number" }, "patch": { "type": "number" } },
        "required": ["major", "minor", "patch"]
      },
      "TokenListResponseDto": {
        "type": "object",
        "properties": {
          "keywords": { "type": "array", "items": { "type": "string" } },
          "logoURI": { "type": "string" },
          "name": { "type": "string" },
          "tags": { "type": "object", "additionalProperties": { "$ref": "#/components/schemas/TagDto" } },
          "tags_order": { "type": "array", "items": { "type": "string" } },
          "timestamp": { "type": "string" },
          "tokens": { "type": "array", "items": { "$ref": "#/components/schemas/TokenInfoDto" } },
          "version": { "$ref": "#/components/schemas/VersionDto" }
        },
        "required": ["keywords", "logoURI", "name", "tags", "tags_order", "timestamp", "tokens", "version"]
      },
      "TokenDto": {
        "type": "object",
        "properties": {
          "chainId": { "type": "number" },
          "symbol": { "type": "string" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "decimals": { "type": "number" },
          "logoURI": { "type": "string" },
          "rating": { "type": "number" },
          "eip2612": { "type": "boolean" },
          "isFoT": { "type": "boolean" },
          "tags": { "type": "array", "items": { "$ref": "#/components/schemas/TagDto" } },
          "providers": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["chainId", "symbol", "name", "address", "decimals", "rating", "tags", "providers"]
      },
      "BadRequestErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 400 },
          "message": { "type": "string" },
          "error": { "type": "string" }
        },
        "required": ["statusCode", "message", "error"]
      }
    }
  }
}
