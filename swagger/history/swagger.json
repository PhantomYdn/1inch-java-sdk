{
  "openapi": "3.0.0",
  "paths": {
    "/v2.0/history/{address}/events": {
      "get": {
        "operationId": "V2RestApiController_getHistoryEventsByAddress",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Account address",
            "schema": { "example": "0x266E77cE9034a023056ea2845CB6A20517F6FDB7", "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Amount of events to return, default is 100, max is 2048",
            "schema": { "example": 100, "type": "number" }
          },
          {
            "name": "tokenAddress",
            "required": false,
            "in": "query",
            "description": "Token address used at event",
            "schema": { "type": "string" }
          },
          {
            "name": "chainId",
            "required": false,
            "in": "query",
            "description": "chainId",
            "schema": { "example": 1, "type": "number" }
          },
          {
            "name": "toTimestampMs",
            "required": false,
            "in": "query",
            "description": "To time at milliseconds",
            "schema": { "example": 1695283931212, "type": "string" }
          },
          {
            "name": "fromTimestampMs",
            "required": false,
            "in": "query",
            "description": "From time at milliseconds",
            "schema": { "example": 1694754179096, "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/HistoryResponseDto" } }
              }
            }
          },
          "400": { "description": "Bad Request." },
          "401": { "description": "Unauthorized." },
          "500": { "description": "Internal server error." }
        },
        "summary": "Returns history events for address",
        "tags": ["history"]
      },
      "post": {
        "operationId": "V2RestApiController_getHistoryEventsByAddressWithMultiFilter",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Account address",
            "schema": { "example": "0x111111111117dC0aa78b770fA6A738034120C302", "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PostMultiFilterDto" } } }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/HistoryResponseDto" } }
              }
            }
          },
          "400": { "description": "Bad Request." },
          "401": { "description": "Unauthorized." },
          "500": { "description": "Internal server error." }
        },
        "summary": "Get history events by address",
        "tags": ["history"]
      }
    },
    "/v2.0/history/{address}/search/events": {
      "post": {
        "operationId": "V2RestApiController_getHistorySearch",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Account address",
            "schema": { "example": "0x111111111117dC0aa78b770fA6A738034120C302", "type": "string" }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/HistorySearchMultiFilterRootDto" } }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/HistoryEventResponseDto" } }
              }
            }
          },
          "400": { "description": "Bad Request." },
          "401": { "description": "Unauthorized." },
          "500": { "description": "Internal server error." }
        },
        "summary": "Returns history event with search filter",
        "tags": ["history"]
      }
    },
    "/v2.0/history/{address}/events/swaps": {
      "post": {
        "operationId": "V2RestApiController_getUserSwap",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "Account address",
            "schema": { "example": "0x111111111117dC0aa78b770fA6A738034120C302", "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HistorySwapFilterRootDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/HistoryEventResponseDto" } }
              }
            }
          },
          "400": { "description": "Bad Request." },
          "401": { "description": "Unauthorized." },
          "500": { "description": "Internal server error." }
        },
        "summary": "Returns swap events for the user",
        "tags": ["history"]
      }
    }
  },
  "info": {
    "title": "Transaction history",
    "description": "History of transactions for the user",
    "version": "2.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    { "url": "https://history-green.1inch.io", "description": "green" },
    { "url": "https://history-blue.1inch.io", "description": "blue" },
    { "url": "http://localhost:3000", "description": "localhost" }
  ],
  "components": {
    "schemas": {
      "TokenActionDto": {
        "type": "object",
        "properties": {
          "address": { "type": "string", "example": "0xc944e90c64b2c07662a292be6244bdf05cda44a7" },
          "standard": { "type": "string", "example": "ERC20" },
          "fromAddress": { "type": "string", "example": "0x266e77ce9034a023056ea2845cb6a20517f6fdb7" },
          "toAddress": { "type": "string", "example": "0x03f7724180aa6b939894b5ca4314783b0b36b329" },
          "tokenId": { "type": "object", "example": "0x03f7724180aa6b939894b5ca4314783b0b36b329" },
          "amount": { "type": "object", "example": "291000000000" },
          "direction": { "type": "string", "example": "Out", "enum": ["In", "Out", "Self", "On"] }
        },
        "required": ["address", "standard", "fromAddress", "toAddress", "direction"]
      },
      "TransactionDetailsMetaDto": {
        "type": "object",
        "properties": {
          "is1inchFusionSwap": { "type": "object", "example": true },
          "is1inchCrossChainSwap": { "type": "object", "example": true },
          "orderFillPercentage": { "type": "object", "example": 2 },
          "ensDomainName": { "type": "object", "example": "usd.eth" },
          "fromChainId": { "type": "object", "example": "56" },
          "toChainId": { "type": "object", "example": "1" },
          "safeAddress": { "type": "object", "example": "0x34391448368ae60aa7dc12dc309c4ef674a06d7f" },
          "protocol": { "type": "object", "example": "Gnosis" }
        }
      },
      "TransactionDetailsDto": {
        "type": "object",
        "properties": {
          "orderInBlock": { "type": "number", "example": 2 },
          "txHash": {
            "type": "string",
            "example": "0xdd87fbd093714d493ba53c000e4222b500e622500eeceaae9d4c4c5111ffbbfc"
          },
          "chainId": {
            "type": "number",
            "enum": [1, 45, 137, 10, 56, 42161, 43114, 100, 324, 8453, 59144, 501, 146, 130],
            "example": 1
          },
          "blockNumber": { "type": "number", "example": "18182982" },
          "blockTimeSec": { "type": "number", "example": "1695283931" },
          "status": { "type": "string", "example": "Completed" },
          "type": {
            "type": "string",
            "example": "Transfer",
            "enum": [
              "Unknown",
              "Approve",
              "Wrap",
              "Unwrap",
              "Transfer",
              "SwapExactInput",
              "SwapExactOutput",
              "LimitOrderFill",
              "LimitOrderCancel",
              "LimitOrderCancelAll",
              "Multicall",
              "AddLiquidity",
              "RemoveLiquidity",
              "Borrow",
              "Repay",
              "Stake",
              "Unstake",
              "Vote",
              "DelegateVotePower",
              "UnDelegateVotePower",
              "DiscardVote",
              "DeployPool",
              "Claim",
              "AbiDecoded",
              "TraceDecoded",
              "Action",
              "Bridge",
              "BuyNft",
              "BidNft",
              "OfferSellNft",
              "Burn",
              "WrappedTx",
              "RegisterENSDomain",
              "Revoke",
              "CreateSafe",
              "AddOwner",
              "Send",
              "Receive",
              "MultiStage",
              "Swap",
              "LimitOrderCreate"
            ]
          },
          "tokenActions": { "type": "array", "items": { "$ref": "#/components/schemas/TokenActionDto" } },
          "fromAddress": { "type": "string", "example": "0x266e77ce9034a023056ea2845cb6a20517f6fdb7" },
          "toAddress": { "type": "string", "example": "0xc944e90c64b2c07662a292be6244bdf05cda44a7" },
          "nonce": { "type": "number", "example": 5 },
          "feeInSmallestNative": { "type": "string", "example": "378906276289230" },
          "meta": { "$ref": "#/components/schemas/TransactionDetailsMetaDto" }
        },
        "required": [
          "orderInBlock",
          "txHash",
          "chainId",
          "blockNumber",
          "blockTimeSec",
          "status",
          "type",
          "tokenActions",
          "fromAddress",
          "toAddress",
          "nonce",
          "feeInSmallestNative"
        ]
      },
      "HistoryEventDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": 7279741913753607 },
          "address": { "type": "string", "example": "0x266E77cE9034a023056ea2845CB6A20517F6FDB7" },
          "type": { "type": "number", "example": 1 },
          "rating": { "type": "string", "enum": ["Reliable", "Scam"], "example": "Reliable" },
          "timeMs": { "type": "number", "example": 1694754179096 },
          "details": { "$ref": "#/components/schemas/TransactionDetailsDto" }
        },
        "required": ["id", "address", "type", "rating", "timeMs", "details"]
      },
      "HistoryResponseDto": {
        "type": "object",
        "properties": {
          "items": { "type": "array", "items": { "$ref": "#/components/schemas/HistoryEventDto" } },
          "cache_counter": { "type": "number" }
        },
        "required": ["items", "cache_counter"]
      },
      "MultiFilterDto": {
        "type": "object",
        "properties": {
          "from_time_ms": { "type": "object" },
          "to_time_ms": { "type": "object" },
          "chain_ids": { "type": "array", "items": { "type": "string" } },
          "transaction_types": { "type": "array", "items": { "type": "string" } },
          "token_addresses": { "type": "array", "items": { "type": "string" } },
          "chain_based_token_addresses": { "type": "array", "items": { "type": "string" } },
          "limit": { "type": "number" }
        }
      },
      "PostMultiFilterDto": {
        "type": "object",
        "properties": { "filter": { "$ref": "#/components/schemas/MultiFilterDto" } },
        "required": ["filter"]
      },
      "SearchAndMultiFilterDto": {
        "type": "object",
        "properties": {
          "from_time_ms": { "type": "object" },
          "to_time_ms": { "type": "object" },
          "chain_ids": { "type": "array", "items": { "type": "string" } },
          "transaction_types": { "type": "array", "items": { "type": "string" } },
          "token_addresses": { "type": "array", "items": { "type": "string" } },
          "chain_based_token_addresses": { "type": "array", "items": { "type": "string" } }
        }
      },
      "UnifiedTransactionHash": { "type": "object", "properties": {} },
      "UnifiedAccountAddress": { "type": "object", "properties": {} },
      "SearchOrMultiFilterDto": {
        "type": "object",
        "properties": {
          "chain_ids": { "type": "array", "items": { "type": "string" } },
          "transaction_types": { "type": "array", "items": { "type": "string" } },
          "chain_based_token_addresses": { "type": "array", "items": { "type": "string" } },
          "transaction_hash": { "$ref": "#/components/schemas/UnifiedTransactionHash" },
          "from_or_to_address": { "$ref": "#/components/schemas/UnifiedAccountAddress" }
        }
      },
      "HistorySearchMultiFilterRootAndDto": {
        "type": "object",
        "properties": {
          "and": { "$ref": "#/components/schemas/SearchAndMultiFilterDto" },
          "or": { "$ref": "#/components/schemas/SearchOrMultiFilterDto" }
        },
        "required": ["and", "or"]
      },
      "HistorySearchMultiFilterRootFilterDto": {
        "type": "object",
        "properties": {
          "and": { "$ref": "#/components/schemas/HistorySearchMultiFilterRootAndDto" },
          "limit": { "type": "number" }
        },
        "required": ["and"]
      },
      "HistorySearchMultiFilterRootDto": {
        "type": "object",
        "properties": { "filter": { "$ref": "#/components/schemas/HistorySearchMultiFilterRootFilterDto" } },
        "required": ["filter"]
      },
      "HistoryEventResponseDto": {
        "type": "object",
        "properties": { "item": { "type": "object" }, "cache_counter": { "type": "number" } },
        "required": ["item", "cache_counter"]
      },
      "UnifiedTokenAddress": { "type": "object", "properties": {} },
      "HistorySwapFilterDto": {
        "type": "object",
        "properties": {
          "chain_ids": { "type": "array", "items": { "type": "string" } },
          "token_address_from": { "$ref": "#/components/schemas/UnifiedTokenAddress" },
          "token_address_to": { "$ref": "#/components/schemas/UnifiedTokenAddress" },
          "limit": { "type": "number" }
        },
        "required": ["chain_ids", "token_address_from", "token_address_to"]
      },
      "HistorySwapFilterRootDto": {
        "type": "object",
        "properties": { "filter": { "$ref": "#/components/schemas/HistorySwapFilterDto" } },
        "required": ["filter"]
      }
    }
  }
}
